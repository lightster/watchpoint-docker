define ENV_CONTENT
DB_URL=postgres://watchpoint:watchpoint@postgres:5432/dev_watchpoint?application_name=watchpoint-app
BNET_API_KEY=$(BNET_API_KEY)
BNET_API_SECRET=$(BNET_API_SECRET)
POSTGRES_USER=watchpoint
POSTGRES_PASSWORD=watchpoint
POSTGRES_DB=dev_watchpoint
HOST_UID=$(shell id -u)
HOST_GID=$(shell id -g)
endef
export ENV_CONTENT

DATE=$(shell date +%F)

install: ${INSTALL_TARGET}

install-docker: build-compose-file
	cp docker/php/dist/timezone.ini docker/php/conf.d/
	docker-compose build
	docker-compose up -d

install-production: build-php-prod-conf install-docker

install-dev: codebase/pickem codebase-update build-nginx-conf install-docker release run-migrations

install-pier: install-dev

.install-db:
	docker-compose run --rm -w /opt/pickem-releases/${VERSION} php-fpm bin/wpt migrate:setup
	touch .install-db

run-migrations: .install-db
	docker-compose run --rm -w /opt/pickem-releases/${VERSION} php-fpm bin/wpt migrate

codebase/pickem:
	git clone git@github.com:lightster/watchpoint-pickem.git codebase/pickem

codebase-update:
	@echo "$$ENV_CONTENT" >.env
	cd codebase/pickem && git pull

build-php-prod-conf:
	cp docker/php/dist/production.ini docker/php/conf.d/

build-nginx-conf:
	cp docker/nginx/dist/* docker/nginx/conf.d/

build-compose-file:
	cp -a docker/docker-compose.*.yml .
	docker-compose $(COMPOSE_FILES) config >docker-compose.yml
	rm docker-compose.*.yml

release: build-release run-migrations link-release

build-release:
	docker-compose run --rm -w /opt/pickem-releases/${VERSION} php-fpm composer install --no-dev

link-release:
	docker-compose run --rm -w /opt/pickem-releases/ php-fpm ln -sfn ${VERSION} current

dump-db:
	mkdir -p data/postgres/snapshots/${DATE}
	# `docker-compose exec` throws an exception after running a command if
	# `docker-compose` is ran via a cron. A workaround is to run the command via
	# `docker exec` instead.
	#
	# https://github.com/docker/compose/issues/3352
	docker exec -i $$(docker-compose ps -q postgres) sh -c \
		'pg_dump -U "$$POSTGRES_USER" -F c \
		-f /tmp/pg-snapshots/${DATE}/$$POSTGRES_DB.pgc \
		"$$POSTGRES_DB"'

dump-db:
	mkdir -p data/postgres/snapshots/${DATE}
	# `docker-compose exec` throws an exception after running a command if
	# `docker-compose` is ran via a cron. A workaround is to run the command via
	# `docker exec` instead.
	#
	# https://github.com/docker/compose/issues/3352
	docker exec -i $$(docker-compose ps -q postgres) sh -c \
		'pg_dump -U "$$POSTGRES_USER" -F c \
		-f /tmp/pg-snapshots/${DATE}/$$POSTGRES_DB.pgc \
		"$$POSTGRES_DB"'
